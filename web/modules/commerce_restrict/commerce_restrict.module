<?php

/**
 * @file
 * Common hook implementations for commerce_restrict module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function commerce_restrict_form_commerce_order_item_add_to_cart_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#validate'][] = 'commerce_restrict_form_commerce_order_item_add_to_cart_form_validate';
}

/**
 * Validation function for add to cart item.
 */
function commerce_restrict_form_commerce_order_item_add_to_cart_form_validate(&$form, FormStateInterface &$form_state) {
  $cart_provider = \Drupal::service('commerce_cart.cart_provider');
  if (\Drupal::currentUser()->id() > 1) {
    $form_state->setErrorByName(NULL, t('You are not allowed to purchase products.'));
  }
  if (!empty($cart_provider->getCartIds())) {
    $form_state->setErrorByName(NULL, t('There is already a product on your cart. Complete your existing cart before purchasing new products.'));
  }
}
